## File type conversion:
1. Due to IT policy, file attachment in email must not containt script file, thus a simple script need to run first to convert all *.txt to *.sh
2. Just run ./convert_txt_sh.txt file in bash, or you prefer to convert it to convert_txt_sh.sh first.


## k3s:
### Main and worker node:
1. ./setup_kmb.sh "node_name"
2. reboot

### Main node:
1. Start k3s service: ./k3s/master/Setup_02.sh
2. Launch device plugin, ros and prometheus: ./k3s/master/Setup_03.sh

### Worker node:
1. STart k3s service with joining master: ./k3s/worker/launch.sh "master_ip_address"



## k8s:
### Main and worker node:
1. ./setup_kmb.sh "node_name"
2. reboot

### Main node:
1. Start k8s service: ./k8s/master/setup_k8s_master.sh
2. Start resource services: ./k8s/master/create_master_services.sh

### Worker node:
1. Run ./k8s/master/join_k8s_command.sh in MASTER NODE.
2. Run the command created in step 1 at WORKER NODE.



## IoT Edge(only worker node setup, master node in Azure):
1. ./setup_kmb.sh "node_name"
2. reboot
3. Run the command with device connection string from Azure: ./iotedge/setup_iotedge.sh "string"




## HDDLUnite Centos
### Centos main and worker node:
1. Docker installation: ./hddl/Centos/01_docker.sh
2. Kubernetes installation: ./hddl/Centos/02_kubernetes.sh
3. Intel proxy and certificate setup: ./hddl/setup_intel_ia_centos.sh
4. Module installation: xlink (https://wiki.ith.intel.com/pages/viewpage.action?pageId=1476473044#Setupvaapi-bypasswithhddlunite-1.PrepareXLinkIAkerenelmodule)
5. Keem Bay device auto connect on boot: https://wiki.ith.intel.com/pages/viewpage.action?pageId=1622041497#KMBUTTMilestone#ER_WW312020_MSFT-NVRBypass-5.1[Optional]Howtoenablehddl_device_serviceautoboot



Main node:
1. Start k8s service: ./hddl/master/setup_k8s_master.sh
2. Start resource services: ./hddl/master/create_master_services.sh


Worker node:
1. Run ./hddl/master/join_k8s_command.sh in MASTER NODE.
2. Run the command created in step 1 at WORKER NODE.





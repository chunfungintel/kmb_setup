#!/bin/bash

printf "Y\n" | kubeadm reset
rm -rf /etc/cni /etc/kubernetes /var/lib/dockershim /var/lib/etcd /var/lib/kubelet /var/run/kubernetes ~/.kube/*

modprobe br_netfilter

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

kubeadm config images pull

cat << EOF > kubeadm.yaml
apiVersion: kubeadm.k8s.io/v1beta1
kind: ClusterConfiguration
networking:
  podSubnet: 10.244.0.0/16
scheduler:
  extraArgs:
    policy-config-file: /etc/edge-ai/scheduler/sched-policy-k8s.json
  extraVolumes:
  - name: kubeconfig-ros
    hostPath: "/etc/edge-ai/scheduler/sched-policy-k8s.json"
    mountPath: "/etc/edge-ai/scheduler/sched-policy-k8s.json"
    readOnly: true
    pathType: FileOrCreate
EOF

kubeadm init 	--config=kubeadm.yaml --v=5


echo "resolvConf: /etc/resolv_kube.conf" >> /var/lib/kubelet/config.yaml
cat << EOF > /etc/resolv_kube.conf
# Generated by Connection Manager
nameserver ::1
EOF

systemctl restart kubelet

mkdir -p $HOME/.kube && \
cp /etc/kubernetes/admin.conf $HOME/.kube/config && \
chown $(id -u):$(id -g) $HOME/.kube/config


kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml



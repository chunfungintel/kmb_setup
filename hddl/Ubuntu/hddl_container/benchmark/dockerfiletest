FROM amr-cache-registry.caas.intel.com/cache/library/ubuntu:18.04

ENV DEBIAN_FRONTEND noninteractive
RUN apt update -y

RUN apt install -y gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libudev-dev qtbase5-dev libboost-program-options-dev libboost-thread-dev libboost-filesystem-dev opencl-c-headers libgstreamer-plugins-bad1.0-dev libva-dev libxrandr-dev autoconf libdrm-dev libx11-dev cmake git wget bison flex libtool pkg-config libxext-dev bash busybox

################################################################################

ENV HDDL_RESET=/opt/hddl_reset
ARG DEB_PACKAGE_NAME

WORKDIR ${HDDL_RESET}
COPY ${DEB_PACKAGE_NAME} ${HDDL_RESET}
RUN ar vx ${DEB_PACKAGE_NAME} && tar -xvf data.tar.xz && cd usr/src/kmb-hddl-driver-0.1.0/hddl_reset && make && make install

################################################################################
# hddlunite

ENV BYPASS_DIR=/opt/hddl_bypass

ENV HVASAMPLE_PATH=${BYPASS_DIR}/hvasample
ENV HDDLUNITE_PATH=${BYPASS_DIR}/hddlunite
ENV HVASAMPLE_OPENVINO_PATH=${HVASAMPLE_PATH}/openvino

ARG HOST_PACKAGE_NAME

WORKDIR ${BYPASS_DIR}
ADD ${HOST_PACKAGE_NAME} ${BYPASS_DIR}
RUN chown -R root:root ${BYPASS_DIR}
#RUN tar -xvf ${BYPASS_DIR}/${HOST_PACKAGE_NAME}

# XLink library location is missing at the moment in env_setup.sh
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HDDLUNITE_PATH}/thirdparty/XLink/lib:/opt/openvino/deployment_tools/inference_engine/external/hddl_unite/thirdparty/thermal/lib/

COPY run_hddl_service.sh /run_hddl_service.sh
################################################################################
# hvasample
ENV HVA_TEST_TIMEOUT=60

COPY config.json ${HVASAMPLE_PATH}/config.json
COPY test /opt/test
COPY run_test.sh /run_test.sh

################################################################################
# openvino KPI

# libformat_reader.so is not in the release archives
# COPY lib/libformat_reader.so /usr/lib/

ENV OPENVINO_PATH=/opt/openvino

ARG OPENVINO_PACKAGE_NAME

ADD ${OPENVINO_PACKAGE_NAME} ${OPENVINO_PATH}
RUN chown -R root:root ${OPENVINO_PATH}
#WORKDIR ${OPENVINO_PATH}
#RUN tar -xvf ${OPENVINO_PACKAGE_NAME}

COPY models ${OPENVINO_PATH}/models
COPY textures /opt/textures
COPY run_kpi.sh /run_kpi.sh
COPY run_forever.sh /run_forever.sh



